
 add more widgets:
   - layouts
       - border (✔)
       - row (✔)
       - column (✔)
       - list (✔)
   - buttons
       - push button (✔)
       - radio buttons (✔)
       - check boxes (✔)
       - menu button (✔)
   - button group
   - label (✔)
   - scroll bars (✔)
   - viewport (✔)
   - menu bar (✔)
   - menu (✔)
   - dialog box (✔)
       - alert (✔)
       - error
       - info (✔)
       - yes/no
       - multivalue
   - text entry
   - text box
   - horizontal separator (✔)
   - vertical separator (✔)
   - option box
   - combo box
   - padding
   - progress bar
   - status bar

add controls:
   - tree control
   - multivalue dialog box (dialog box containing other widgets)
   - file save
   - file open

Look at other toolkits, work out if there are any other controls or
widgets that could be useful.

 PRIORITIES:

*. event handling (keyboard, delayed), focus, input, tab order.

*. keyboard navigation

*. command tables

*. Layouts - make it pretty, make it functional

*. File explorer - local fs, archives, s3


USABILITY
=========
ACCELERATORS + MNEMONICS - for buttons and generic commands

and we need command tables or some other way to tie keys and ui to
commands.

Instead of frigging pens for different purposes, put them in the theme
definition as specific pens. Move all direct Pen instantiations into
frame.


LAYOUT IMPROVEMENTS
===================

Box layouts
-----------
Should support explicit sizes for kids as well as ratios. Allow space
for explicitly specified sizes, then split remaining space over
specified ratios. If there's free space left (all specified sizes but
space remains), do what? Leave undefined for now, throw on user to
make sure it doesn't happen.
First pass: fixed sizes
Second pass: percentages

Box layout not working now buttons refuse to take space allocation
that is over the space composed. Layout needs to hold the offsets
instead of relying on having them in the child widgets.

TEXT ALIGNMENT ON BUTTONS / BORDER TITLES

Label needs to support alignments and truncation.

Multiline labels

Measuring text needs to be better; len(str) might not be effective for
multibyte characters.


VISUAL FEEDBACK
===============
test / fix screen resize! See docs from asciimatics


GENERAL / CODING
================
DIFFERENT TYPES OF BORDERS

look at other stuff asciimatics does (save / restore form state etc.)
and decide if that's something that could be useful.Pretty sure it
isn't...

DOCUMENTATION - write some

USE THE SHEET TYPES ALREADY PRESENT TO BUILD CONTROLS OUT OF; E.G.,
SCROLLBAR BUTTONS SHOULD BE BUTTONS, PADDING SHOULD BE BORDER PANE,
ETC.

BORDERLAYOUT CLEAR METHOD ISN'T SETTING BACKGROUND COLOUR PROPERLY
(SEE "green" BORDER IN BASIC.PY)

Unit tests, documentation, project setup. Make it more professional,
push to gitlab. Maybe people will use it... given the chance.

Migrate everything that displays text into having a contained Label
that holds the text instead.

Rename "get_screen_transform()" + apply transform pair into something
like "convert_to_screen_coordinate"?


EVENT HANDLING
==============
need to do something about events! - see draw_next_frame() in
screen.py

event handling (button click / release) seems slow. Investigate.

click detection is really ropey. Maybe asciimatics is not reporting
them like it should?

Implement a "functional event" that allows functions to be called at a
later point in time, after the current event is dealt with.

Can the widgets be based on urwid instead of asciimatics? Not sure if
that will make a difference to anything, might be worth trying.

When a popup is detached the focus needs to be returned to some
other top level. Not sure this is happening although it's hard to
know just yet...

===============================================

EXAMPLE WIDGET APP - MAKE IT SHOW ALL THE OPTIONS FOR ALL THE WIDGETS.

TIDY THE WIDGETS, DOCUMENT THE PROTOCOLS.

EVENT HANDLING - HOW MUCH IS NEEDED?
  - on_click
  - on_button_down
  - on_button_up
  - on_double_click
  - on_activate

BUTTON LABEL ALIGNMENT - do with label

Replace button hard-coded label with label sheet, implement alignments
in that type so it doesn't need to be done all over. Use in other
places also, such as when drawing text for borders.

PUSH BUTTONS: CENTER ALIGN BY DEFAULT
RADIO + CHECK BUTTONS: LEFT ALIGN BY DEFAULT

